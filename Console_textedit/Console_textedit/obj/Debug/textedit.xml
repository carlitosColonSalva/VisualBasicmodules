<?xml version="1.0"?>
<doc>
<assembly>
<name>
textedit
</name>
</assembly>
<members>
<member name="T:textedit.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:textedit.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:textedit.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:textedit.My.Resources.Resources.help_file">
<summary>
  Looks up a localized string similar to 
this executable accepts piped arguments from
another executable

the arguments are as follow:

this_exe.exe option argument

options:
	(-prepend | -p) | 
	(-append | -a) | 
	(-remove | -rm) |
	(-replace FOO -with FOO2 | -r FOO -w FOO2) | 
	(-replaceline FOO -with FOO2 | -rl FOO -w FOO2) | 
	(-substring | -s) |
	(-trim | -t) | 
	(-trimstart | -ts) |
	(-trimend | -te) argument

tab character is managed by typing /t or /T
quotes character is managed by typing /q or /Q

-append argument
 [rest of string was truncated]&quot;;.
</summary>
</member>
<member name="M:textedit.replace_all_hex_in_string_module.replace_all_hex_in_string(System.String@)">
 <summary>
 this module replaces all hex representations to the real hex character
 the hex representation is like this:
"~h0x0000...~"
 </summary>
 <param name="some_string">a string that contains a hex representation like this: ~h0x0000...~</param>
</member>
</members>
</doc>
